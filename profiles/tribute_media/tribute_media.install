<?php
/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function tribute_media_install() {
  // Enable some tribute_media blocks.
  $default_theme = 'material_theme';
  $admin_theme = 'seven';
  // disable all themes
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();
  // enable $default_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();
  // enable $admin_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('theme_default', $default_theme);
  variable_set('admin_theme', $admin_theme);
  // activate admin theme when editing a node
  variable_set('node_admin_theme', '1');
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 0,
      'weight' => 0,
      'region' => '',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );
  // drop system / user blocks to ensure correct building
  db_delete('block')->condition('module', 'system')->execute();
  db_delete('block')->condition('module', 'user')->execute();
  // add in our blocks defined above
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();
  
  // From shortcut.install, add shortcuts to the default set on install
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = NULL;
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/structure/block',
      'link_title' => st('Administer Blocks'),
      'weight' => -17,
    ),
    array(
      'link_path' => 'admin/structure/menu',
      'link_title' => st('Manage Menus'),
      'weight' => -12,
    ),    
  );
  shortcut_set_save($shortcut_set);
  // Update the menu router information.
  menu_rebuild();
  // revert features to ensure they are all installed
  $features = array(
    'tm_content_types',
    'tm_menus',
    'tm_roles',
    'tm_text_formats',
    'tm_blocks',
  );
  features_revert($features);
  // ignore any rebuild messages
  node_access_needs_rebuild(FALSE);
  // ignore any other install messages
  drupal_get_messages();
  
  // Enable clean URLs
  variable_set('clean_url', 1);
  
  // Create Admin and Tech Support users.
  // Generate password using current date.
  $current_month = date('n');
  $current_year = date('Y');
  if (((int)$current_month == 12) || ((int)$current_month < 3)) {
    $season = 'Winter';
  } elseif (((int)$current_month > 2) && ((int)$current_month < 6)) {
    $season = 'Spring';
  } elseif (((int)$current_month > 5) && ((int)$current_month < 9)) {
    $season = 'Summer';
  } else {
    $season = 'Autumn';
  }
  $password = $season . $current_year . '!';
  
  $role = user_role_load_by_name('administrator');
  $role_id = $role->rid;
  // Set up the user fields
  $ad_fields = array(
    'name' => 'Admin',
    'mail' => 'changeme@example.com',
    'pass' => $password,
    'status' => 1,
    'roles' => array(
      $role_id => $role_id,
    ),
  );
  $account = user_save('', $ad_fields);
  
  $role = user_role_load_by_name('Tech Support');
  $role_id = $role->rid;
  // Set up the user fields
  $ts_fields = array(
    'name' => 'Tech Support',
    'mail' => 'servers@tributemedia.com',
    'pass' => $password,
    'status' => 1,
    'roles' => array(
      $role_id => $role_id,
    ),
  );
  $account = user_save('', $ts_fields);

  // Set Tech Support as admin role for Masquerade.
  variable_set('masquerade_admin_roles', array($role_id,));
  
  // Set Admin as Masquerade test user.
  variable_set('masquerade_test_user', 'Admin');
  
  // Set TCB User Login user account
  variable_set('tcbclient_uid', 'Tech Support');
  variable_set('tcbclient_url', 'http://dev-authtechcenterboisecom.pantheonsite.io/');
  
  // Set alias patterns
  variable_set('pathauto_node_pattern', '[node:title]');
  variable_set('pathauto_node_article_pattern', 'blog/[node:title]');
  
  // Create homepage node
  $ts_user = user_load_by_name('Tech Support');
  
  $node = entity_create('node', array('type' => 'page'));
  $node->uid = $ts_user->uid;
  $ewrapper = entity_metadata_wrapper('node', $node);
  $ewrapper->title = 'Home';
  $ewrapper->save();
  $nid = $ewrapper->getIdentifier();
  
  variable_set('site_frontpage', 'node/' . $nid);
  
  // Create Contact webform
  $types = variable_get('weform_node_types', array('webform'));
  $types[] = 'landing_page';
  variable_set('weform_node_types', $types);
  
  // Configure External Links
  variable_set('extlink_class', 0);
  
}
